fun main(){//1. Поиск максимума:
//Напишите лямбда-выражение, которое принимает два числа и возвращает максимальное из них.
//    var max:(Int,Int)->Int = {//указали возвращаемый тип
//        a: Int, b: Int ->
//        if (a>b){
//            a
//        }else{
//            b
//        }
//    }
//    var max2 = fun (a: Int,b: Int) {
//        if (a>b){
//            a
//        }else{
//            b
//        }
//    }
//
//    println("Введите 1 число: ")
//    var a=readln().toInt()
//    println("Введите 2 число: ")
//    var b=readln().toInt()
//    println( max(a,b))
//    println( max2(a,b))
//2. Фильтрация списка:
//Напишите лямбда-выражение, которое принимает список чисел и возвращает новый список, содержащий только четные числа.
//    var chet1 = emptyList<Int>()
//    var chet = {
//        list: List<Int>->
//        for (i in list){
//            if (i%2==0){
//                chet1 += i
//            }
//        }
//        chet1
//    }
//    var l: List<Int> = listOf(1,2,3,4,5,6)
//    println(chet(l))
//3. Вычисление среднего значения:
//Создайте лямбда-функцию, которая принимает список чисел и возвращает их среднее значение.

//4. Преобразование списка строк в список длин строк:
//Напишите лямбда-выражение, которое принимает список строк и возвращает список их длин.

//5. Умножение на заданное число:
//Напишите лямбда-выражение, которое принимает число и возвращает результат умножения этого числа на заданное фиксированное число.

//6. Подсчет символов в строке:
//Напишите лямбда-выражение, которое принимает строку и возвращает количество символов в ней.
var kolvosimv:(String)->Int = {
    a: String->var v = a.length
    v
}
println(kolvosimv("Юлия"))
}