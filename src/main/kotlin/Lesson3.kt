import java.time.Month
import kotlin.math.sqrt


fun main(args: Array<String>) {

////### Уровень 1 (lvl 1):
//
////1. Запросите у пользователя его имя и выведите приветствие.
//
//    println("Введите имы: ")
//    val name = readln()
//    println("Привет! $name")
////2. Создайте программу, которая проверяет, является ли введенное число четным.
//    println("Введите число: ")
//    val num = readln().toInt()
//    if (num%2 == 0){
//        println("Четное")
//    }else {
//        println("Нечетное")
//    }
////3. Попросите пользователя ввести свой возраст и выведите сообщение, является ли он совершеннолетним.
//    println("Введите ваш возраст: ")
//    var vozrast = readln().toInt()
//    when(vozrast){
//        in 0..17 -> println("Ребенок")
//        else -> println("Cовершеннолетний")
//    }
////4. Напишите программу, которая определяет, является ли введенное число положительным.
//    println("Введите число: ")
//    val ch = readln().toInt()
//    if (ch >= 0){
//        println("Отрицательное")
//    }else{
//        println("Положительное")
//    }
////5. Попросите пользователя ввести два числа и выведите наименьшее из них.
//    println("Введите два числа для сравнения: ")
//    val v1 = readln().toInt()
//    val v2 = readln().toInt()
//    if (v1>v2){
//        println("$v1 больше $v2")
//    }else if (v2>v1){
//        println("$v2 больше $v1")
//    }else{
//        println("Числа равны")
//    }
//
////6. Создайте программу, которая проверяет, является ли введенное число кратным 5.
//    println("Введите число: ")
//    val f = readln().toInt()
//    if (f%5 ==0 ){
//        println("Число $f является кратным 5")
//    }else{
//        println("Число $f НЕ является кратным 5")
//    }
////7. Попросите пользователя ввести температуру в градусах Цельсия и выведите её в градусах Фаренгейта.
//    println("Введите температуру в градусах Цельсия: ")
//    val t = readln().toInt()
//    val tF = t*9/5+32
//
//    println("Температур в градусах Фаренгейта: $tF")
////8. Напишите программу, которая определяет, является ли год високосным.
//    println("Введите год: ")
//    val isLeapYear = readln().toInt()
//    if (isLeapYear%4==0){
//        println("Високосный")
//    }else{
//        println("Не високосный")
//    }
////9. Попросите пользователя ввести число и проверьте, принадлежит ли оно диапазону от 10 до 20.
//    println("Введите число: ")
//    val num1 = readln().toInt()
//    if (num1>=10 && num1<=20){
//        println("Принадлежит")
//    }else{
//        println("Не принадлежит")
//    }
////10. Создайте программу, которая проверяет, является ли введенный символ буквой английского алфавита.
//    println("Введите символ: ")
//    val alfx = readln()
//    var alphabet: String = ""
//    for(alp in 'a'..'z') {
//        alphabet += alp.toString()
//    }
//    if(alfx in alphabet) {
//        println("Введенный символ является буквой английского алфавита")
//    }else{
//
//        println("Введенный символ НЕ является буквой английского алфавита")
//    }
//
//
////11. Попросите пользователя ввести свой вес в килограммах и рассчитайте его вес на Луне (примерно 1/6 веса на Земле).
//    println("Введите вес в кг: ")
//    val v = readln().toInt()
//    val vMoon = v/6
//    println("Вес на Луне: $vMoon")
//
////12. Напишите программу, которая определяет, является ли введенное число простым.
//    println("Введите число: ")
//    val num2 = readln().toInt()
//    var i=2
//    while (num2%i !=0){
//        i+=1
//    }
//    println(num2==i)
//
////13. Попросите пользователя ввести длины двух катетов, а затем рассчитайте длину гипотенузы в прямоугольном треугольнике.
//    println("Введите два катета: ")
//    val kat1 = readln().toDouble()//Если я уверена что тут что то лежит readln
//    val kat2 = readln().toDouble()
//    val gip = Math.pow(kat1,2.0)+Math.pow(kat2,2.0)
//    println("Длина гипотенузы: ${Math.sqrt(gip)}")
////14. Создайте программу, которая проверяет, является ли введенный год годом рождения пользователя.
//    println("Введите ваш год рожждения: ")
//    val yearMy = readln().toInt()
//    val year1 = 2000
//    if (year1 == yearMy){
//        println("Совпадает год рождения")
//    }else{
//        println("НЕ совпадает год рождения")
//    }
//
////15. Попросите пользователя ввести радиус круга и рассчитайте его площадь.
//    println("Ввести радиус круга: ")
//    val r = readln().toDouble()
//    val s1 = Math.PI*Math.pow(r,2.0)
//    println("Площадь: $s1")
////16. Напишите программу, которая определяет, является ли введенный год "годом змеи" в китайском календаре.
//println("Введите год: ")
//var yearzmei= readln().toInt()
//    //2025%12=9
//if (yearzmei%12==9){
//    println("Змейка")
//}else if (yearzmei%12==8){
//    println("Дракон")
//}else{
//    println("Другой")
//}
//
//
////17. Попросите пользователя ввести длины трех сторон треугольника и определите, является ли он прямоугольным.
//    println("Введите сторону1: ")
//    val c1 = readln().toDouble()
//    println("Введите сторону2: ")
//    val c2 = readln().toDouble()
//    println("Введите сторону3: ")
//
//
//    val c3 = readln().toDouble()
//    if (Math.pow(c1,2.0)+Math.pow(c2,2.0)==Math.pow(c3,2.0)){
//        println("Прямоугольный треугольник")
//    }else if (Math.pow(c3,2.0)+Math.pow(c2,2.0)==Math.pow(c1,2.0)){
//        println("Прямоугольный треугольник")
//    }else if (Math.pow(c3,2.0)+Math.pow(c1,2.0)==Math.pow(c2,2.0)){
//        println("Прямоугольный треугольник")
//    }else{
//        println("НЕ Прямоугольный треугольник")
//    }
//18. Создайте программу, которая проверяет, является ли введенное число совершенным (сумма делителей равна самому числу).

//19. Попросите пользователя ввести свой рост в сантиметрах и рассчитайте его рост в дюймах.
    println("Введите рост в см: ")
    val hight = readln().toInt()
    val d = hight/2.54
    println("Рост в дюймах: $d")

//20. Напишите программу, которая определяет, является ли введенный год вековым (делится на 100).
    println("Введите год: ")
    val year = readln().toInt()
    if (year%100 == 0){
        println("Год вековой")
    }else {
        println("Год не вековой")
    }
//### Уровень 2 (lvl 2):

//21. Попросите пользователя ввести три числа и выведите их в порядке возрастания.
    var x:Int = readln().toInt()
    var y: Int = readln().toInt()
    var z: Int = readln().toInt()

    if (x > y && x > z) {
        print("$x, ")
        if (y>z){
            print("$y, $z")
        }else{
            print("$z, $y")
        }
    } else if (y > x && y > z) {
        println("$y, ")
        if (x>z){
            print("$x, $z")
        }else{
            print("$z, $x")
        }
    } else if (z > x && z > y) {
        print("$z, ")
        if (x>y){
            print("$x, $y")
        }else{
            print("$y, $x")
        }

    }



//22. Создайте программу, которая проверяет, является ли введенная строка палиндромом.
    val text = readln().toString()
    var text2 = text.reversed()
    if (text==text2 ){
        println("Да, палиндром")
    }else{
        println("Не палиндром")
    }
//23. Попросите пользователя ввести количество товаров и их стоимость, а затем рассчитайте общую сумму покупки.
println("Введите количество товара(от 2 до 6): ")
val tovar = readln().toInt()
println("Введите стоимость товаров: ")

    if (tovar==2){
        val a1 = readln().toInt()
        val a2 = readln().toInt()
       println("Сумма ${a1+a2}")
    }else if (tovar==3){
        val a1 = readln().toInt()
        val a2 = readln().toInt()
        val a3 = readln().toInt()
        println("Сумма ${a1 + a2+a3}")
    }

//24. Напишите программу, которая принимает на вход год и месяц, а затем выводит количество дней в этом месяце.
//25. Попросите пользователя ввести число и определите, является ли оно степенью двойки.
//26. Создайте программу, которая проверяет, является ли введенная строка числом.

////19. Попросите пользователя ввести свой рост в сантиметрах и рассчитайте его рост в дюймах.
//    println("Введите рост в см: ")
//    val hight = readln().toInt()
//    val d = hight/2.54
//    println("Рост в дюймах: $d")
//
////20. Напишите программу, которая определяет, является ли введенный год вековым (делится на 100).
//    println("Введите год: ")
//    val year = readln().toInt()
//    if (year%100 == 0){
//        println("Год вековой")
//    }else {
//        println("Год не вековой")
//    }
////### Уровень 2 (lvl 2):
//
////21. Попросите пользователя ввести три числа и выведите их в порядке возрастания.
//    var x:Int = readln().toInt()
//    var y: Int = readln().toInt()
//    var z: Int = readln().toInt()
//
//    if (x > y && x > z) {
//        print("$x, ")
//        if (y>z){
//            print("$y, $z")
//        }else{
//            print("$z, $y")
//        }
//    } else if (y > x && y > z) {
//        println("$y, ")
//        if (x>z){
//            print("$x, $z")
//        }else{
//            print("$z, $x")
//        }
//    } else if (z > x && z > y) {
//        print("$z, ")
//        if (x>y){
//            print("$x, $y")
//        }else{
//            print("$y, $x")
//        }
//
//    }
//
//
//
////22. Создайте программу, которая проверяет, является ли введенная строка палиндромом.
//    val text = readln().toString()
//    var text2 = text.reversed()
//    if (text==text2 ){
//        println("Да, палиндром")
//    }else{
//        println("Не палиндром")
//    }
////23. Попросите пользователя ввести количество товаров и их стоимость, а затем рассчитайте общую сумму покупки.
//println("Введите количество товара(от 2 до 6): ")
//val tovar = readln().toInt()
//println("Введите стоимость товаров: ")
//
//    if (tovar==2){
//        val a1 = readln().toInt()
//        val a2 = readln().toInt()
//       println("Сумма ${a1+a2}")
//    }else if (tovar==3){
//        val a1 = readln().toInt()
//        val a2 = readln().toInt()
//        val a3 = readln().toInt()
//        println("Сумма ${a1 + a2+a3}")
//    }

//24. Напишите программу, которая принимает на вход год и месяц, а затем выводит количество дней в этом месяце.
//    println("Введите год: ")
//    var god= readln().toInt()
//    println("Введите месяц: ")
//    var mec= readln().toInt()
//    if (mec==1){
//        println("31 день")
//    }else if (mec==2){
//        if (god%4==0){
//            println("29 день")
//        }else{
//            println("28 день")
//        }
//    }else if (mec==3){
//        println("31 день")
//    }else if (mec==4){
//        println("30 день")
//    }else if (mec==5){
//        println("31 день")
//    }else if (mec==6){
//        println("30 день")
//    }else if (mec==7){
//        println("31 день")
//    }else if (mec==8){
//        println("31 день")
//    }else if (mec==9){
//        println("30 день")
//    }else if (mec==10){
//        println("31 день")
//    }else if (mec==11){
//        println("30 день")
//    }else if (mec==12){
//        println("31 день")
//    }
////25. Попросите пользователя ввести число и определите, является ли оно степенью двойки.
//    println("Введите число: ")
//    val step = readln().toInt()
//    if (step%2==0){
//        println("Да число степень 2")
//    }else{
//        println("Нет")
//    }
//26. Создайте программу, которая проверяет, является ли введенная строка числом.
//    println("Введите строку: ")
//    val str= readLine()
//    try {
//        // Пытаемся преобразовать строку в число
//        if (str != null) {
//            str.toDouble()
//        }
//        println("Число")
//    } catch (e: NumberFormatException) {
//        // В случае ошибки преобразования, строка не является числом
//        println("Не число")
//    }
//27. Попросите пользователя ввести свой балл за экзамен и выведите его оценку (A, B, C, D, F).
//28. Напишите программу, которая находит корни квадратного уравнения (ax^2 + bx + c = 0) по введенным коэффициентам.
//29. Попросите пользователя ввести количество миль и переведите это расстояние в километры.
//30. Создайте программу, которая генерирует случайное число от 1 до 100, а пользователь должен угадать это число.

//### Уровень 3 (lvl 3):

//31. Попросите пользователя ввести математическое выражение (например, "2 + 3 * 4") и вычислите результат.

    println("Введите математическое выражение:")
    val expression = readLine()
    try {
        if (expression == null || expression.isEmpty()) {//проверка на пустоту
            throw IllegalArgumentException("Пустое выражение")
        }

        // Разбиваем выражение на числа и операторы
        val tokens = expression.trim().split("\\s+".toRegex())//expression.trim(): Этот вызов удаляет начальные и конечные
        // пробелы из строки expression. Метод trim() возвращает новую строку, в которой удалены пробелы с обеих сторон.
        //split("\\s+".toRegex()): Этот вызов разбивает строку на подстроки, используя регулярное выражение "\\s+", которое означает один или более пробелов. Функция split возвращает массив подстрок.
        //
        //Таким образом, expression.trim().split("\\s+".toRegex()) берет введенное математическое выражение,
        // удаляет пробелы с обеих сторон, а затем разбивает его на массив подстрок,
        // используя один или более пробелов в качестве разделителя. Это полезно для того,
        // чтобы получить массив чисел и операторов из введенного выражения. Например, для строки "2 + 3 * 4",
        // результатом этого выражения будет массив ["2", "+", "3", "*", "4"].

        // Инициализируем результат первым числом
        var result = tokens[0].toDouble()

        // Итерируем по оставшимся токенам
        for (i in 1 until tokens.size step 2) {//1..tokens.size-1
            val operator = tokens[i]//символ
            val operand = tokens[i + 1].toDouble()//число

            // Выполняем операцию в зависимости от текущего оператора
            when (operator) {
                "+" -> result += operand
                "-" -> result -= operand
                "*" -> result *= operand
                "/" -> result /= operand
                else -> throw IllegalArgumentException("Неверный оператор: $operator")
            }
        }

        println("Результат выражения \"$expression\" равен $result")
    } catch (e: Exception) {
        println("Ошибка при вычислении выражения: ${e.message}")
    }
}



//32. Напишите программу, которая определяет, является ли введенная строка валидным email адресом. НАЙТИ готовые регулярки(регулярные выражения)
//33. Попросите пользователя ввести набор чисел, разделенных пробелами, и рассчитайте их среднее значение.
//34. Создайте программу, которая принимает на вход число и выводит его представление в римской системе счисления.
//35. Попросите пользователя ввести дату своего рождения и определите его знак зодиака.

//    println("Введите дату своего рождения в формате гггг-мм-дд:")
//    val birthday = readlnOrNull()
//    if (isValidationBirthDay(birthday)) {
//        val zodiacSign = determineZodiacSign(birthday!!)
//        println("Ваш знак зодиака: $zodiacSign")
//    } else {
//        println("Не корректно введена дата!")
//    }
//}
//    println("Введите дату своего рождения в формате гггг-мм-дд:")
//    val birthday = readlnOrNull()
//    if (isValidationBirthDay(birthday)) {
//        val zodiacSign = determineZodiacSign(birthday!!)
//        println("Ваш знак зодиака: $zodiacSign")
//    } else {
//        println("Не корректно введена дата!")
//    }


    // Функция возвращает знак зодиака
    private fun determineZodiacSign(birthday: String): String {
        val listBirthday = birthday.split("-").map {
            it.toInt()
        }
        val month = listBirthday[1]
        val day = listBirthday[2]
        return when (month) {
            1 -> if (day > 20) "Водолей" else "Козерог"
            2 -> if (day > 20) "Рыбы" else "Водолей"
            3 -> if (day > 20) "Овен" else "Рыбы"
            4 -> if (day > 20) "Телец" else "Овен"
            5 -> if (day > 20) "Близнецы" else "Телец"
            6 -> if (day > 21) "Рак" else "Близнецы"
            7 -> if (day > 22) "Лев" else "Рак"
            8 -> if (day > 23) "Дева" else "Лев"
            9 -> if (day > 23) "Весы" else "Дева"
            10 -> if (day > 23) "Скорпион" else "Весы"
            11 -> if (day > 22) "Стрелец" else "Скорпион"
            12 -> if (day > 21) "Козерог" else "Стрелец"
            else -> "Такой знак зодиака ещё не придумали :)))"
        }
    }

    // Функция проверяет введённую дату на валидность
    private fun isValidationBirthDay(birthday: String?): Boolean {
        val regexBirthday = Regex("(\\d{4})-(\\d{2})-(\\d{2})")
        if (birthday.isNullOrEmpty() || !birthday.matches(regexBirthday)) {
            return false
        }
        val listBirthday = birthday.split("-").map {
            it.toInt()
        }
        if (listBirthday[1] !in 1..12 || lastDayMonth(listBirthday[0], listBirthday[1]) < listBirthday[2]) {
            return false
        }
        return true
    }

    // Функция возвращает последний день месяца
    private fun lastDayMonth(year: Int, month: Int): Int {
        return when (month) {
            2 -> if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) 29 else 28
            4, 6, 9, 11 -> 30
            else -> 31
        }
    }
