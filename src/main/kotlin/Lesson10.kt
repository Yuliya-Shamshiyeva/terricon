fun main(){
//  //  Создайте массив из 10 целых чисел и выведите его на экран.
//
//    for (i in arr){
//        print("$i ")
//    }
//    println()
////    Найдите сумму элементов массива из предыдущей задачи.
//    println(arr.sum())
//    var sum = 0
//    for(i in arr){
//        sum = sum+i
//    }
//    println(sum)
////    Найдите среднее значение элементов массива из предыдущей задачи.
//    println(arr.sum()/arr.size)
//    println(sum/arr.size)
////    Найдите минимальный и максимальный элементы в массиве.
//    println("Максимальный ${arr.max()} и Минимальный ${arr.min()}  ")
////    Поменяйте местами первый и последний элементы массива.
//    val a = arr[0]
//    arr[0]= arr[arr.size-1]
//    arr[arr.size-1]=a
//    println("Первый ${arr[0]} и последний ${arr[arr.size-1]}")
//    arr.forEach {
//        print("$it ")
//    }
//    println()
////    Создайте новый массив, содержащий только четные числа из предыдущего массива.
//
//    val arr: Array<Int> = arrayOf(10,9,8,7,6,5,4,3,2,1)
//    val arr2 = mutableListOf<Int>()
//
//    for (i in 0..arr.size-1){
//        if (arr[i]%2==0){
//            arr2.add(arr[i])
//        }
//    }
//





//
////    Отсортируйте массив по возрастанию.
//    println("Отсортирванный массив по возрастанию->${arr2.sorted()}")
////    Отсортируйте массив по убыванию.
//    println("Отсортирванный массив по возрастанию->${arr2.sortedDescending()}")
////    Переверните порядок элементов в массиве.
////
//    Создайте массив из 5 строк и объедините их в одну строку, разделяя пробелами.
//
    val table = Array(5, { Array(3, {0}) })
    table[0] = arrayOf(1, 2, 3)     // первая строка таблицы
    table[1] = arrayOf(4, 5, 6)     // вторая строка таблицы
    table[2] = arrayOf(7, 8, 9)     // третья строка таблицы
    table[3] = arrayOf(10, 20, 30)     // 4 строка таблицы
    table[4] = arrayOf(40, 50, 60)     // 5 строка таблицы

    println(table.contentToString())

//    Найдите количество элементов в массиве, которые больше 5.
//
//    Удалите из массива все элементы, которые меньше 3.
//
//    Замените все отрицательные элементы массива на их абсолютные значения.
//
//    Проверьте, содержит ли массив число 7.
//
//    Создайте двумерный массив 3x3 и выведите его на экран.
//
    // Создаём двумерный массив
    var arr33 = arrayOf<Array<Int>>()

// заполняем нулями
    for (i in 0..2) {
        var array = arrayOf<Int>()
        for (j in 0..2) {
            array += 1
        }
        arr33 += array
    }

// выводим данные массива
    for (a33 in arr33) {
        for (value in a33) {
            print("$value ")
        }
        println()
    }
//    Найдите сумму всех элементов двумерного массива.
//
    var arrsum: Int = 0
    for (arraysum in arr33){
        for (value in arraysum) {
            arrsum+=value
        }

    }
//    Найдите сумму каждой строки двумерного массива.
//
//    Найдите сумму каждого столбца двумерного массива.
//
//    Транспонируйте двумерный массив (поменяйте местами строки и столбцы).



//    Найдите максимальный элемент в каждой строке двумерного массива.
//
//    Найдите минимальный элемент в каждом столбце двумерного массива.
//
//    Проверьте, является ли двумерный массив симметричным относительно главной диагонали.
//
//    Создайте массив из 10 случайных чисел и отсортируйте его.
//
//    Найдите медиану массива.
//
//    Разбейте массив на два подмассива: один с четными, другой с нечетными числами.
//
//    Подсчитайте количество уникальных элементов в массиве.
//
//    Найдите два наименьших элемента массива.
//
//    Поменяйте местами каждые два соседних элемента массива.


//    val arr: Array<Int> = arrayOf(10,9,8,7,6,5,4,3,2,1,5)
//
//    for (i in 0..arr.size-1 step 2){
//        if (arr.size<i+1){
//        var temp = arr[i]
//        arr[i]=arr[i+1]
//        arr[i+1]=temp
//        }
//    }
//    print(arr.contentToString())


//    Объедините два массива в один.
//
//    Найдите наибольшую возрастающую подпоследовательность в массиве.
//
//    Реализуйте сортировку массива слиянием.
//
//    Реализуйте алгоритм быстрой сортировки для массива.
//
//    Реализуйте алгоритм поиска элемента в отсортированном массиве методом бинарного поиска.
//
//    Найдите пересечение двух массивов.
//
//    Найдите объединение двух массивов.
//
//    Найдите разность двух массивов.
//    Проверьте, является ли массив палиндромом.
//
//    Реализуйте циклический сдвиг массива на k позиций.
//
//    Найдите количество инверсий в массиве (пар элементов, стоящих в неправильном порядке).

}